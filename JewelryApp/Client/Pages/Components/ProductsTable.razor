@using System.Net.Http.Json
@using JewelryApp.Models.Dtos
@using JewelryApp.Common.Extensions

@inject IProductService ProductService
@inject IDialogService Dialog
@inject ISnackbar Snackbar

<style>
    .my-custom-class {
        backdrop-filter: blur(10px);
    }
</style>

<MudDataGrid Outlined="true" Class="@Class" Items="@_products" Dense="true" Hover="true" Bordered="true" Filterable="Filterable">
    <ToolBarContent>
        <MudText Typo="Typo.h6">لیست اجناس</MudText>
        <MudSpacer />
        @if (IsInProductPage)
        {
            <MudButton Color="Color.Primary" OnClick="@((e) => OpenDialog(fullScreen, "افزودن جنس"))"
                       EndIcon="@Icons.Material.Filled.Add" Variant="Variant.Filled">افزودن</MudButton>
        }
        else
        {
            <MudButton Color="Color.Primary" EndIcon="@Icons.Material.Filled.ArrowBack" Variant="Variant.Filled">بیشتر</MudButton>
        }
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.Index" Title="ردیف" />
        <PropertyColumn Property="x => x.BarcodeText" Title="کد جنس" />
        <PropertyColumn Property="x => x.Name" Title="نام جنس" />
        <PropertyColumn Property="x => x.ProductType.GetDisplayName()" Title="نوع جنس" />
        <TemplateColumn CellClass="justify-center" Title="عملیات">
            <CellTemplate>
                <MudStack Row>
                    <MudButton Size="@Size.Small" Variant="@Variant.Filled" EndIcon="@Icons.Material.Filled.Print" Color="@Color.Primary">چاپ بارکد</MudButton>
                    @if (IsInProductPage)
                    {
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" EndIcon="@Icons.Material.Filled.Edit" Color="@Color.Success">ویرایش</MudButton>
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" EndIcon="@Icons.Material.Filled.Delete" Color="@Color.Error">حذف</MudButton>
                    }
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>
@code {
    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public int Count { get; set; } = 0;

    [Parameter]
    public bool IsInProductPage { get; set; }

    [Parameter]
    public bool Filterable { get; set; }
    

    private IEnumerable<ProductTableItemDto>? _products;

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    DialogOptions fullScreen = new DialogOptions() { CloseButton = true, ClassBackground = "my-custom-class", FullWidth = true};

    private async Task OpenDialog(DialogOptions options, string dialogTitle)
    {
        var dialog = await Dialog.ShowAsync<ProductDialog>(dialogTitle, options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            Snackbar.Add("جنس با موفقیت افزوده شد", Severity.Success);
            await Refresh();
        }
    }

    private async Task Refresh()
    {
        _products = await ProductService.GetProductsAsync(Count);
    }
}