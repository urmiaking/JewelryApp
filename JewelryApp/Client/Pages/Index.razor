@page "/"
@using JewelryApp.Data.Models

@inject IPriceService PriceService

<MudGrid>
    <MudItem xs="12" sm="6" md="4">
        <MudPaper Elevation="2" Class="pa-4" Style="height: 120px; background-color: #00a65a">
            <MudText Typo="Typo.h6" Class="text-white">تعداد کل فاکتورها</MudText>
            <MudText Typo="Typo.h4" Align="Align.Left" Class="mt-5 text-white">@_invoiceCount</MudText>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="4">
        <MudPaper Elevation="2" Class="pa-4" Style="height: 120px; background-color: #0073b7">
            <MudText Typo="Typo.h6" Class="text-white">نرخ گرم روز</MudText>
            <MudText Typo="Typo.h4" Align="Align.Left" Class="mt-5 text-white">@_dailyGramPrice</MudText>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="12" md="4">
        <MudPaper Elevation="2" Class="pa-4" Style="height: 120px; background-color: #dd4b39 !important">
            <MudText Typo="Typo.h6" Class="text-white">آخرین بروز رسانی گرم</MudText>
            <MudText Typo="Typo.h4" Align="Align.Left" Class="mt-5 text-white">@_lastUpdate</MudText>
        </MudPaper>
    </MudItem>
</MudGrid>

<ProductsTable Class="mt-5"></ProductsTable>
<InvoicesTable Class="mt-5"></InvoicesTable>

@code
{
    private int _invoiceCount;
    private string? _dailyGramPrice;
    private string? _lastUpdate;

    private bool IsModalVisible { get; set; }
    private Product Product { get; set; } = new ();

    protected override async Task OnInitializedAsync()
    {
        var priceModel = await PriceService.GetPriceModel();

        if (priceModel is not null)
        {
            _dailyGramPrice = priceModel.Price.ToString("N0");
            _lastUpdate = priceModel.LastUpdate;
        }
    }
}
